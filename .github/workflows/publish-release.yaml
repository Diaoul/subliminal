name: Publish Github release

on:
  push:
    tags:
      - "*.*.*"
  workflow_call:
    inputs:
      tag-name:
        description: 'Tag name'
        required: true
        type: 'string'
  workflow_dispatch:
    inputs:
      tag-name:
        description: 'Tag name'
        required: true
        type: 'string'

permissions: {}

env:
  FORCE_COLOR: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_PYTHON_VERSION_WARNING: "1"

jobs:
  # Always build & lint package.
  build-package:
    name: Build & verify package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        if: github.event_name == 'push'
        with:
          persist-credentials: false

      - name: Checkout
        uses: actions/checkout@v4
        if: |
          github.event_name == 'workflow_dispatch'
          || github.event_name == 'workflow_call'
        with:
          ref: ${{ inputs.tag-name }}
          persist-credentials: false

      - name: Build dist
        uses: hynek/build-and-inspect-python-package@v2
        id: baipp

      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade tox

      - name: Generate Release Notes
        env:
          RELEASE_VERSION: ${{ steps.baipp.outputs.package_version }}
        run: |
          sudo apt-get install pandoc
          # use package_version computed in step 'baipp'
          tox -e generate-gh-release-notes -- "$RELEASE_VERSION" latest-release-notes.md

      - name: Upload release notes
        uses: actions/upload-artifact@v4
        with:
          name: latest-release-notes
          path: latest-release-notes.md
          include-hidden-files: false
          if-no-files-found: error
    outputs:
      tag: ${{ steps.baipp.outputs.package_version }}

  github-release:
    name: Make a GitHub Release
    needs: [build-package]
    if: github.repository == 'Diaoul/subliminal'
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: mandatory for making GitHub Releases
      contents: write
      id-token: write

    # Publish a Github release when a tag was pushed, or it's called with a tag.
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          ref: ${{ needs.build-package.outputs.tag }}
          persist-credentials: false

      - name: Download packages built by build-and-inspect-python-package
        uses: actions/download-artifact@v4
        with:
          name: Packages
          path: dist
      - name: Download release notes
        uses: actions/download-artifact@v4
        with:
          name: latest-release-notes
          path: latest-release-notes.md

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          body_path: latest-release-notes.md
          draft: true
