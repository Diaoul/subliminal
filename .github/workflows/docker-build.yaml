name: Publish Docker image

on:
  push:
    branches:
      - main
    tags:
      - "*.*.*"
  workflow_call:
    inputs:
      tag-name:
        description: 'Tag name'
        required: true
        type: 'string'
  workflow_dispatch:
    inputs:
      tag-name:
        description: 'Tag name'
        required: true
        type: 'string'
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TEST_IMAGE: subliminal

jobs:
  build-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Checkout repository
        if: github.event_name == 'workflow_call' || github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag-name }}
          persist-credentials: false

      - name: Set up QEMU
        if: |
          github.event_name == 'push'
          || github.event_name == 'workflow_call'
          || github.event_name == 'workflow_dispatch'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          cache-binary: false

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/0.') }}

      - name: Test building Docker image
        uses: docker/build-push-action@v6
        if: github.event_name == 'pull_request'
        with:
          context: .
          load: true
          tags: ${{ env.TEST_IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        if: |
          github.event_name == 'push'
          || github.event_name == 'workflow_call'
          || github.event_name == 'workflow_dispatch'
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

# vim:ts=2:sw=2:et
