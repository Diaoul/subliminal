name: Tag release

on:
  pull_request:
    types:
      - closed
  workflow_dispatch:
    inputs:
      version:
        description: 'Release tag version.'
        type: string
        default: NONE
        required: true

permissions: {}

env:
  FORCE_COLOR: "1"

# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
jobs:
  # Always build & lint package.
  build-package:
    name: Build & verify package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: hynek/build-and-inspect-python-package@v2

  tag-manually:
    name: Tag a new release manually
    # tag a release after a release PR was accepted
    if: github.event_name == 'workflow_dispatch'
    needs: [build-package]
    env:
      RELEASE_VERSION: ${{ inputs.version }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Tag the commit
        run: |
          RELEASE_VERSION=${GITHUB_HEAD_REF#release-}
          echo Release version: $RELEASE_VERSION
          git config user.name 'subliminal bot'
          git config user.email diaoulael@gmail.com
          git tag --annotate --message="Release version $RELEASE_VERSION" $RELEASE_VERSION ${{ github.sha }}
          git push origin $RELEASE_VERSION


  tag-release:
    name: Tag a new release, from a release PR
    # for security, the PR must be from a 'releases/*' branch AND have the 'type/release' label
    # keep in sync with scripts/prepare-release-pr.py
    if: |
      github.repository == 'Diaoul/subliminal'
      && github.event_name == 'pull_request'
      && github.event.action == 'closed'
      && github.event.pull_request.merged == true
      && contains(github.event.pull_request.labels.*.name, 'type/release')
      && startsWith(github.head_ref, 'releases/')
    needs: [build-package]
    env:
      GITHUB_HEAD_REF: ${{ github.head_ref }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Tag the commit
        run: |
          RELEASE_VERSION=${GITHUB_HEAD_REF#release-}
          echo Release version: $RELEASE_VERSION
          git config user.name 'subliminal bot'
          git config user.email diaoulael@gmail.com
          git tag --annotate --message="Release version $RELEASE_VERSION" $RELEASE_VERSION ${{ github.sha }}
          git push origin $RELEASE_VERSION
