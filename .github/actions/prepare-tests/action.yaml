name: 'Download data for tests'
description: 'Download .mkv and compress them with rar to be used in tests.'

runs:
  using: "composite"
  steps:
    - name: Check Runner OS
      if: ${{ runner.os != 'Linux' && runner.os != 'Windows' && runner.os != 'macOS'}}
      shell: bash
      run: |
        echo "::error title=⛔ error hint::Support Linux, Windows, and macOS Only"
        exit 1
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
        fetch-depth: 0
    - name: Cache test data
      id: cache-test-data
      uses: actions/cache@v4
      with:
        path: tests/data/
        enableCrossOsArchive: true
        key: prepare-tests

    - name: Download only from Linux Runner OS
      if: ${{ steps.cache-test-data.outputs.cache-hit != 'true' && runner.os != 'Linux' }}
      shell: bash
      run: |
        echo "::error title=⛔ error hint::Download cache only from Linux: ${{ runner.os }}."
        exit 1
    - name: Install other test software (on Linux only)
      if: steps.cache-test-data.outputs.cache-hit != 'true'
      uses: awalsh128/cache-apt-pkgs-action@v1
      with:
        packages: rar
        version: 1.0
    - uses: actions/setup-python@v5
      if: steps.cache-test-data.outputs.cache-hit != 'true'
      with:
        python-version-file: .python-version-default
        cache: pip
    - name: Install dependencies
      if: steps.cache-test-data.outputs.cache-hit != 'true'
      shell: bash
      run: |
        python -Im pip install --upgrade pip
        python -Im pip install tox requests
    - name: Download tests data
      if: steps.cache-test-data.outputs.cache-hit != 'true'
      shell: bash
      run: |
        tox -e prepare-tests

    # - name: Upload files for test
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: tests-data
    #     path: tests/data/
    #     include-hidden-files: false
    #     if-no-files-found: error
    #     # heavy artifact should be deleted asap
    #     retention-days: 1
